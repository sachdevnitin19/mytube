{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///angular-bootstrap-confirm.min.js","webpack:///webpack/bootstrap b1010d9ea60872ef9949","webpack:///./src/angular-bootstrap-confirm.js","webpack:///external \"angular\"","webpack:///./src/angular-bootstrap-confirm.html","webpack:///external \"angular-sanitize\""],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_1__","__WEBPACK_EXTERNAL_MODULE_3__","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","angular","defaultPopoverTemplate","DEFAULT_POPOVER_URL","run","$templateCache","put","controller","$scope","$rootScope","$element","$attrs","$compile","$document","$window","$timeout","$injector","$templateRequest","$parse","$log","confirmationPopoverDefaults","assignOuterScopeValue","attributeName","value","scopeName","isDefined","assign","warn","evaluateOuterScopeValue","defaultValue","positionPopover","position","positionService","positionElements","vm","popover","placement","defaults","top","left","css","applyFocus","buttonToFocus","focusButton","targetButtonClass","getElementsByClassName","focus","showPopover","isVisible","isDisabled","display","hidePopover","togglePopover","$apply","documentClick","event","contains","target","positionServiceName","has","get","templateUrl","popoverScope","$new","then","template","element","find","append","onConfirm","onCancel","$watch","isOpen","newIsOpenValue","bind","addEventListener","$on","remove","unbind","removeEventListener","$destroy","directive","restrict","confirmText","cancelText","confirmButtonType","cancelButtonType","hideConfirmButton","hideCancelButton","name"],"mappings":"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","file":"angular-bootstrap-confirm.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"angular\"), require(\"angular-sanitize\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"angular\", \"angular-sanitize\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"angularBootstrapConfirmModuleName\"] = factory(require(\"angular\"), require(\"angular-sanitize\"));\n\telse\n\t\troot[\"angularBootstrapConfirmModuleName\"] = factory(root[\"angular\"], root[\"angular-sanitize\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_3__) {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","/**\n   * angular-bootstrap-confirm - Displays a bootstrap confirmation popover when clicking the given element.\n   * @version v2.3.0\n   * @link https://github.com/mattlewis92/angular-bootstrap-confirm\n   * @license MIT\n   */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"angular\"), require(\"angular-sanitize\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"angular\", \"angular-sanitize\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"angularBootstrapConfirmModuleName\"] = factory(require(\"angular\"), require(\"angular-sanitize\"));\n\telse\n\t\troot[\"angularBootstrapConfirmModuleName\"] = factory(root[\"angular\"], root[\"angular-sanitize\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_3__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar angular = __webpack_require__(1);\n\tvar defaultPopoverTemplate = __webpack_require__(2);\n\t__webpack_require__(3);\n\t__webpack_require__(1);\n\tvar DEFAULT_POPOVER_URL = 'angular-bootstrap-confirm.html';\n\t\n\tmodule.exports = angular\n\t\n\t  .module('mwl.confirm', [\n\t    'ngSanitize',\n\t    'ui.bootstrap.position'\n\t  ])\n\t\n\t  .run([\"$templateCache\", function($templateCache) {\n\t    $templateCache.put(DEFAULT_POPOVER_URL, defaultPopoverTemplate);\n\t  }])\n\t\n\t  .controller('PopoverConfirmCtrl', [\"$scope\", \"$rootScope\", \"$element\", \"$attrs\", \"$compile\", \"$document\", \"$window\", \"$timeout\", \"$injector\", \"$templateRequest\", \"$parse\", \"$log\", \"confirmationPopoverDefaults\", function($scope, $rootScope, $element, $attrs, $compile, $document, $window, $timeout,\n\t                                             $injector, $templateRequest, $parse, $log, confirmationPopoverDefaults) {\n\t    var vm = this;\n\t    vm.defaults = confirmationPopoverDefaults;\n\t    vm.$attrs = $attrs;\n\t    var positionServiceName = $injector.has('$uibPosition') ? '$uibPosition' : '$position';\n\t    var positionService = $injector.get(positionServiceName);\n\t    var templateUrl = $attrs.templateUrl || confirmationPopoverDefaults.templateUrl;\n\t    var popoverScope = $rootScope.$new(true);\n\t    popoverScope.vm = vm;\n\t\n\t    function assignOuterScopeValue(attributeName, value) {\n\t      var scopeName = $attrs[attributeName];\n\t      if (angular.isDefined(scopeName)) {\n\t        if ($parse(scopeName).assign) {\n\t          $parse(scopeName).assign($scope, value);\n\t        } else {\n\t          $log.warn('Could not set value of ' + attributeName + ' to ' + value + '. This is normally because the value is not a variable.');\n\t        }\n\t      }\n\t    }\n\t\n\t    function evaluateOuterScopeValue(scopeName, defaultValue) {\n\t      if (angular.isDefined(scopeName)) {\n\t        return $parse(scopeName)($scope);\n\t      } else {\n\t        return defaultValue;\n\t      }\n\t    }\n\t\n\t    $templateRequest(templateUrl).then(function(template) {\n\t      vm.popover = angular.element(template);\n\t      vm.popover.css('display', 'none');\n\t      $compile(vm.popover)(popoverScope);\n\t      $document.find('body').append(vm.popover);\n\t    });\n\t\n\t    vm.isVisible = false;\n\t\n\t    function positionPopover() {\n\t      var position = positionService.positionElements($element, vm.popover, $attrs.placement || vm.defaults.placement, true);\n\t      position.top += 'px';\n\t      position.left += 'px';\n\t      vm.popover.css(position);\n\t    }\n\t\n\t    function applyFocus() {\n\t      var buttonToFocus = $attrs.focusButton || vm.defaults.focusButton;\n\t      if (buttonToFocus) {\n\t        var targetButtonClass = buttonToFocus + '-button';\n\t        vm.popover[0].getElementsByClassName(targetButtonClass)[0].focus();\n\t      }\n\t    }\n\t\n\t    function showPopover() {\n\t      if (!vm.isVisible && !evaluateOuterScopeValue($attrs.isDisabled, false)) {\n\t        vm.popover.css({display: 'block'});\n\t        positionPopover();\n\t        applyFocus();\n\t        vm.isVisible = true;\n\t        assignOuterScopeValue('isOpen', true);\n\t      }\n\t    }\n\t\n\t    function hidePopover() {\n\t      if (vm.isVisible) {\n\t        vm.popover.css({display: 'none'});\n\t        vm.isVisible = false;\n\t        assignOuterScopeValue('isOpen', false);\n\t      }\n\t    }\n\t\n\t    function togglePopover() {\n\t      if (!vm.isVisible) {\n\t        showPopover();\n\t      } else {\n\t        hidePopover();\n\t      }\n\t      $scope.$apply();\n\t    }\n\t\n\t    function documentClick(event) {\n\t      if (vm.isVisible && !vm.popover[0].contains(event.target) && !$element[0].contains(event.target)) {\n\t        hidePopover();\n\t        $scope.$apply();\n\t      }\n\t    }\n\t\n\t    vm.showPopover = showPopover;\n\t    vm.hidePopover = hidePopover;\n\t    vm.togglePopover = togglePopover;\n\t\n\t    vm.onConfirm = function() {\n\t      evaluateOuterScopeValue($attrs.onConfirm);\n\t    };\n\t\n\t    vm.onCancel = function() {\n\t      evaluateOuterScopeValue($attrs.onCancel);\n\t    };\n\t\n\t    $scope.$watch($attrs.isOpen, function(newIsOpenValue) {\n\t      $timeout(function() { //timeout required so that documentClick() event doesn't fire and close it\n\t        if (newIsOpenValue) {\n\t          showPopover();\n\t        } else {\n\t          hidePopover();\n\t        }\n\t      });\n\t    });\n\t\n\t    $element.bind('click', togglePopover);\n\t\n\t    $window.addEventListener('resize', positionPopover);\n\t\n\t    $document.bind('click', documentClick);\n\t    $document.bind('touchend', documentClick);\n\t\n\t    $scope.$on('$destroy', function() {\n\t      vm.popover.remove();\n\t      $element.unbind('click', togglePopover);\n\t      $window.removeEventListener('resize', positionPopover);\n\t      $document.unbind('click', documentClick);\n\t      $document.unbind('touchend', documentClick);\n\t      popoverScope.$destroy();\n\t    });\n\t\n\t  }])\n\t\n\t  .directive('mwlConfirm', function() {\n\t\n\t    return {\n\t      restrict: 'A',\n\t      controller: 'PopoverConfirmCtrl'\n\t    };\n\t\n\t  })\n\t\n\t  .value('confirmationPopoverDefaults', {\n\t    confirmText: 'Confirm',\n\t    cancelText: 'Cancel',\n\t    confirmButtonType: 'success',\n\t    cancelButtonType: 'default',\n\t    placement: 'top',\n\t    focusButton: null,\n\t    templateUrl: DEFAULT_POPOVER_URL,\n\t    hideConfirmButton: false,\n\t    hideCancelButton: false\n\t  })\n\t\n\t  .name;\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div\\n  class=\\\"popover\\\"\\n  ng-class=\\\"[vm.$attrs.placement || vm.defaults.placement, 'popover-' + (vm.$attrs.placement || vm.defaults.placement), vm.$attrs.popoverClass || vm.defaults.popoverClass]\\\">\\n  <div class=\\\"popover-arrow arrow\\\"></div>\\n  <h3 class=\\\"popover-title\\\" ng-bind-html=\\\"vm.$attrs.title\\\"></h3>\\n  <div class=\\\"popover-content\\\">\\n    <p ng-bind-html=\\\"vm.$attrs.message\\\"></p>\\n    <div class=\\\"row\\\">\\n      <div\\n        class=\\\"col-xs-6\\\"\\n        ng-if=\\\"!vm.$attrs.hideConfirmButton && !vm.defaults.hideConfirmButton\\\"\\n        ng-class=\\\"{'col-xs-offset-3': vm.$attrs.hideCancelButton || vm.defaults.hideCancelButton}\\\">\\n        <button\\n          class=\\\"btn btn-block confirm-button\\\"\\n          ng-class=\\\"'btn-' + (vm.$attrs.confirmButtonType || vm.defaults.confirmButtonType)\\\"\\n          ng-click=\\\"vm.onConfirm(); vm.hidePopover()\\\"\\n          ng-bind-html=\\\"vm.$attrs.confirmText || vm.defaults.confirmText\\\">\\n        </button>\\n      </div>\\n      <div\\n        class=\\\"col-xs-6\\\"\\n        ng-if=\\\"!vm.$attrs.hideCancelButton && !vm.defaults.hideCancelButton\\\"\\n        ng-class=\\\"{'col-xs-offset-3': vm.$attrs.hideConfirmButton || vm.defaults.hideConfirmButton}\\\">\\n        <button\\n          class=\\\"btn btn-block cancel-button\\\"\\n          ng-class=\\\"'btn-' + (vm.$attrs.cancelButtonType || vm.defaults.cancelButtonType)\\\"\\n          ng-click=\\\"vm.onCancel(); vm.hidePopover()\\\"\\n          ng-bind-html=\\\"vm.$attrs.cancelText || vm.defaults.cancelText\\\">\\n        </button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** angular-bootstrap-confirm.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap b1010d9ea60872ef9949\n **/","'use strict';\n\nvar angular = require('angular');\nvar defaultPopoverTemplate = require('./angular-bootstrap-confirm.html');\nrequire('angular-sanitize');\nrequire('./ui-bootstrap-position');\nvar DEFAULT_POPOVER_URL = 'angular-bootstrap-confirm.html';\n\nmodule.exports = angular\n\n  .module('mwl.confirm', [\n    'ngSanitize',\n    'ui.bootstrap.position'\n  ])\n\n  .run([\"$templateCache\", function($templateCache) {\n    $templateCache.put(DEFAULT_POPOVER_URL, defaultPopoverTemplate);\n  }])\n\n  .controller('PopoverConfirmCtrl', [\"$scope\", \"$rootScope\", \"$element\", \"$attrs\", \"$compile\", \"$document\", \"$window\", \"$timeout\", \"$injector\", \"$templateRequest\", \"$parse\", \"$log\", \"confirmationPopoverDefaults\", function($scope, $rootScope, $element, $attrs, $compile, $document, $window, $timeout,\n                                             $injector, $templateRequest, $parse, $log, confirmationPopoverDefaults) {\n    var vm = this;\n    vm.defaults = confirmationPopoverDefaults;\n    vm.$attrs = $attrs;\n    var positionServiceName = $injector.has('$uibPosition') ? '$uibPosition' : '$position';\n    var positionService = $injector.get(positionServiceName);\n    var templateUrl = $attrs.templateUrl || confirmationPopoverDefaults.templateUrl;\n    var popoverScope = $rootScope.$new(true);\n    popoverScope.vm = vm;\n\n    function assignOuterScopeValue(attributeName, value) {\n      var scopeName = $attrs[attributeName];\n      if (angular.isDefined(scopeName)) {\n        if ($parse(scopeName).assign) {\n          $parse(scopeName).assign($scope, value);\n        } else {\n          $log.warn('Could not set value of ' + attributeName + ' to ' + value + '. This is normally because the value is not a variable.');\n        }\n      }\n    }\n\n    function evaluateOuterScopeValue(scopeName, defaultValue) {\n      if (angular.isDefined(scopeName)) {\n        return $parse(scopeName)($scope);\n      } else {\n        return defaultValue;\n      }\n    }\n\n    $templateRequest(templateUrl).then(function(template) {\n      vm.popover = angular.element(template);\n      vm.popover.css('display', 'none');\n      $compile(vm.popover)(popoverScope);\n      $document.find('body').append(vm.popover);\n    });\n\n    vm.isVisible = false;\n\n    function positionPopover() {\n      var position = positionService.positionElements($element, vm.popover, $attrs.placement || vm.defaults.placement, true);\n      position.top += 'px';\n      position.left += 'px';\n      vm.popover.css(position);\n    }\n\n    function applyFocus() {\n      var buttonToFocus = $attrs.focusButton || vm.defaults.focusButton;\n      if (buttonToFocus) {\n        var targetButtonClass = buttonToFocus + '-button';\n        vm.popover[0].getElementsByClassName(targetButtonClass)[0].focus();\n      }\n    }\n\n    function showPopover() {\n      if (!vm.isVisible && !evaluateOuterScopeValue($attrs.isDisabled, false)) {\n        vm.popover.css({display: 'block'});\n        positionPopover();\n        applyFocus();\n        vm.isVisible = true;\n        assignOuterScopeValue('isOpen', true);\n      }\n    }\n\n    function hidePopover() {\n      if (vm.isVisible) {\n        vm.popover.css({display: 'none'});\n        vm.isVisible = false;\n        assignOuterScopeValue('isOpen', false);\n      }\n    }\n\n    function togglePopover() {\n      if (!vm.isVisible) {\n        showPopover();\n      } else {\n        hidePopover();\n      }\n      $scope.$apply();\n    }\n\n    function documentClick(event) {\n      if (vm.isVisible && !vm.popover[0].contains(event.target) && !$element[0].contains(event.target)) {\n        hidePopover();\n        $scope.$apply();\n      }\n    }\n\n    vm.showPopover = showPopover;\n    vm.hidePopover = hidePopover;\n    vm.togglePopover = togglePopover;\n\n    vm.onConfirm = function() {\n      evaluateOuterScopeValue($attrs.onConfirm);\n    };\n\n    vm.onCancel = function() {\n      evaluateOuterScopeValue($attrs.onCancel);\n    };\n\n    $scope.$watch($attrs.isOpen, function(newIsOpenValue) {\n      $timeout(function() { //timeout required so that documentClick() event doesn't fire and close it\n        if (newIsOpenValue) {\n          showPopover();\n        } else {\n          hidePopover();\n        }\n      });\n    });\n\n    $element.bind('click', togglePopover);\n\n    $window.addEventListener('resize', positionPopover);\n\n    $document.bind('click', documentClick);\n    $document.bind('touchend', documentClick);\n\n    $scope.$on('$destroy', function() {\n      vm.popover.remove();\n      $element.unbind('click', togglePopover);\n      $window.removeEventListener('resize', positionPopover);\n      $document.unbind('click', documentClick);\n      $document.unbind('touchend', documentClick);\n      popoverScope.$destroy();\n    });\n\n  }])\n\n  .directive('mwlConfirm', function() {\n\n    return {\n      restrict: 'A',\n      controller: 'PopoverConfirmCtrl'\n    };\n\n  })\n\n  .value('confirmationPopoverDefaults', {\n    confirmText: 'Confirm',\n    cancelText: 'Cancel',\n    confirmButtonType: 'success',\n    cancelButtonType: 'default',\n    placement: 'top',\n    focusButton: null,\n    templateUrl: DEFAULT_POPOVER_URL,\n    hideConfirmButton: false,\n    hideCancelButton: false\n  })\n\n  .name;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/angular-bootstrap-confirm.js\n ** module id = 0\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"angular\"\n ** module id = 1\n ** module chunks = 0\n **/","module.exports = \"<div\\n  class=\\\"popover\\\"\\n  ng-class=\\\"[vm.$attrs.placement || vm.defaults.placement, 'popover-' + (vm.$attrs.placement || vm.defaults.placement), vm.$attrs.popoverClass || vm.defaults.popoverClass]\\\">\\n  <div class=\\\"popover-arrow arrow\\\"></div>\\n  <h3 class=\\\"popover-title\\\" ng-bind-html=\\\"vm.$attrs.title\\\"></h3>\\n  <div class=\\\"popover-content\\\">\\n    <p ng-bind-html=\\\"vm.$attrs.message\\\"></p>\\n    <div class=\\\"row\\\">\\n      <div\\n        class=\\\"col-xs-6\\\"\\n        ng-if=\\\"!vm.$attrs.hideConfirmButton && !vm.defaults.hideConfirmButton\\\"\\n        ng-class=\\\"{'col-xs-offset-3': vm.$attrs.hideCancelButton || vm.defaults.hideCancelButton}\\\">\\n        <button\\n          class=\\\"btn btn-block confirm-button\\\"\\n          ng-class=\\\"'btn-' + (vm.$attrs.confirmButtonType || vm.defaults.confirmButtonType)\\\"\\n          ng-click=\\\"vm.onConfirm(); vm.hidePopover()\\\"\\n          ng-bind-html=\\\"vm.$attrs.confirmText || vm.defaults.confirmText\\\">\\n        </button>\\n      </div>\\n      <div\\n        class=\\\"col-xs-6\\\"\\n        ng-if=\\\"!vm.$attrs.hideCancelButton && !vm.defaults.hideCancelButton\\\"\\n        ng-class=\\\"{'col-xs-offset-3': vm.$attrs.hideConfirmButton || vm.defaults.hideConfirmButton}\\\">\\n        <button\\n          class=\\\"btn btn-block cancel-button\\\"\\n          ng-class=\\\"'btn-' + (vm.$attrs.cancelButtonType || vm.defaults.cancelButtonType)\\\"\\n          ng-click=\\\"vm.onCancel(); vm.hidePopover()\\\"\\n          ng-bind-html=\\\"vm.$attrs.cancelText || vm.defaults.cancelText\\\">\\n        </button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/angular-bootstrap-confirm.html\n ** module id = 2\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"angular-sanitize\"\n ** module id = 3\n ** module chunks = 0\n **/"],"sourceRoot":""}